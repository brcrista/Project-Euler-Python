"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

from itertools import takewhile

from mathtools.number_theory import even
from mathtools.combinatorics import fibonacci_numbers

def sum_even_fibonacci_numbers(n: int) -> int:
    """The sum of even Fibonacci numbers less than `n`."""
    return sum(fib for fib in takewhile(lambda x: x <= n, fibonacci_numbers()) if even(fib))

def solution():
    return sum_even_fibonacci_numbers(4000000)
